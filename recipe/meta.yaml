{% set name = "python-levenshtein" %}
{% set camelName = "python-Levenshtein" %}
{% set version = "0.26.1" %}
{% set hash_val = "24ba578e28058ebb4afa2700057e1678d7adf27e43cd1f17700c09a9009d5d3a" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  fn: {{ name }}-{{ version }}.tar.gz
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name.replace('-', '_').lower() }}-{{ version }}.tar.gz
  sha256: {{ hash_val }}

build:
  noarch: python
  number: 0
  script: {{ PYTHON }} -m pip install . -vv

requirements:
  build:
    - python >=3.7
  host:
    - python >=3.7
    - pip
    - setuptools
    - levenshtein =={{ version }}
  run:
    - python >=3.7
    - levenshtein =={{ version }}

test:
  imports:
    - Levenshtein
  commands:
    # Trivial test to ensure compiled C code is indeed available
    - python -c "import sys; from Levenshtein import distance as d; assert 3==d('Good', 'Bad')"

about:
  home: https://github.com/maxbachmann/python-Levenshtein
  license: GPL-2.0-or-later
  license_family: GPL
  license_file: COPYING
  summary: Python extension for computing string edit distances and similarities.
  description: |
    A Python extension written in C for fast computation of: Levenshtein (edit)
    distance and edit sequence manipulation; string similarity; approximate median
    strings, and generally string averaging; string sequence and set similarity.
    Levenshtein has a some overlap with difflib (SequenceMatcher). It supports
    only strings, not arbitrary sequence types, but on the other hand it's much
    faster. Note the project was renamed, and python-Levenshtein is now just a
    metapackage installing the Levenshtein package. 
  doc_url: https://github.com/maxbachmann/Levenshtein
  dev_url: https://github.com/maxbachmann/python-Levenshtein

extra:
  recipe-maintainers:
    - maxbachmann
    - pmlandwehr
    - peterjc
